{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "BookRead API docs",
    "description": "API documentation for the GoIT 'BookRead' project. [Backend GitHub Repository](https://github.com/vladho/books-reading-backend)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://books-reading-backend.herokuapp.com/" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth endpoints"
    },
    {
      "name": "Books",
      "description": "Books endpoints"
    },
    {
      "name": "Training",
      "description": "Training endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Required fields are missing",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get user information",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Auth user from GoogleAuth, after redirected to https://books-reading-bc05.netlify.app/training",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books for the current user",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "'Not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Add a new book to the library",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Book's object",
          "required": true,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/books/{bookId}": {
      "patch": {
        "tags": ["Books"],
        "summary": "Add book's review",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "description": "Book's id",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Book's review object",
          "required": true,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
           "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "The book has not been read yet",
            "content": {}
          },
           "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete book",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "description": "Book's id",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Book's delete object",
          "required": true,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
           "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/training": {
      "get": {
        "tags": ["Training"],
        "summary": "Get current training",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
           "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Training"],
        "summary": "Add training",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Training's object",
          "required": true,
          "content": {}
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Training"],
        "summary": "Add read pages to the training",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Training's object",
          "required": true,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid request body / Token not provided",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "607f1f77bcf86cd799439011"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Test"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "id": {
                "type": "string",
                "description": "User's id",
                "example": "607f1f77bcf86cd799439011"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
